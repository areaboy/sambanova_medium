<?php
error_reporting(0);
?>


<script>
const textarea = document.getElementById('content1');
const inputField = document.getElementById('content2');

// Add event listeners to both elements
textarea.addEventListener('input', () => {
  inputField.value = textarea.value;
});

inputField.addEventListener('input', () => {
  textarea.value = inputField.value;
});

</script>



<?php
if (isset($_POST) and $_SERVER['REQUEST_METHOD'] == "POST") {
include('settings.php');
$topic = strip_tags($_POST['topic']);
$sambanova_api_key = strip_tags($_POST['sambanova_api_key']);
$sambanova_api_model = strip_tags($_POST['sambanova_model']);
$medium_api_token = strip_tags($_POST['medium_api_token']);

if ($topic == ''){
echo "<div class='bad_css' id='alerts_content'>Topic cannot be empty</div>";
exit();
}


$text_prompt ="$topic . Give full details, Clickable Links,  Sources and References";
$url =$sambanova_api_url;

$payload ='{
	"stream": true,
	"model": "'.$sambanova_api_model.'",
	"messages": [
		{
			"role": "system",
			"content": "You are a helpful assistant"
		},
		{
			"role": "user",
			"content": "'.$text_prompt.'"
		}
	]
	}' ;
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_POST, TRUE);
curl_setopt($ch, CURLOPT_HTTPHEADER, array("Authorization: Bearer $sambanova_api_key" , 'Content-Type:application/json'));
curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
$output = curl_exec($ch); 


if($output == ''){
echo "<div class='alerts_content bad_css' >API Call to Sambanova AI Failed. Ensure there is an Internet  Connections...</div><br>";
exit();
}

$http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE);
// catch error message before closing
if (curl_errno($ch)) {
   //echo $error_msg = curl_error($ch);
}
curl_close($ch);

if($http_status == 400){
echo "<div class='alerts_content  bad_css'>Server Unable to understand Your Request. Ensure The Sambanova Model is Correct</div><br>";
exit();
}

if($http_status == 401){
echo "<div class='alerts_content bad_css' >Sambanova Invalid Authentication Keys</div><br>";
exit();
}


if($http_status == 408){
echo "<div class='alerts_content  bad_css'>Samabanova Request Timeout</div><br>";
exit();
}


if($http_status == 429){
echo "<div class='alerts_content bad_css'>Sambanova -- Too Many Request. Insufficient Quota</div><br>";
exit();
}

if($http_status == 200){


// Split the output into individual JSON strings
$json_strings = explode('data: ', trim($output, ' data: [DONE]'));

// Initialize an empty string to store the content
$allContent = "";

// Loop through each string, decode, and access the content
foreach ($json_strings as $json_string) {
  $json = json_decode($json_string, true);
  if (isset($json['choices'][0]['delta']['content'])) {
    $allContent .= $json['choices'][0]['delta']['content'] . "\n";
  }
}

// remove all double or single quotes in the API result
$replace1 = str_replace('"', '', $allContent);
$replace2 = str_replace("'", '', $replace1);
$allContent_validate = $replace2;

$allContent_validate_ok= "<h1>$topic</h1><p>$allContent_validate</p>";


echo "
<div class='res_clear result_ai2'>
<div class='alert alert-success'>
<button class='btn btn-danger btn-xs pull-right res_clear_btn' title='Clear Result'>Clear Result</button><br>

<center><h4><b style='color:purple'>Blog Content Successfully Generated by Sambanova AI</b></h4></center>


 <div class='form-group'>
              <label>Medium Post Title: </label>
              <input type='text' class='col-sm-12 form-control post_title' value='$topic'>
            </div>
<div style='width:100%;'>.</div>

 <div class='form-group'>
<label>Generated Medium Post Description</label><br>
<textarea cols='8' rows='8' class='col-sm-12 form-control' id='content1' placeholder='Enter Text Contents'>$allContent_validate_ok</textarea>

<input type='text' id='content2' placeholder='Enter Text Contents' class='post_desc input_css_data' value='$allContent_validate_ok'>
</div>

<input type='hidden'  class='medium_api_token2' value='$medium_api_token'>


<div style='width:100%;'>.</div>

<label>Medium Post Publication Status</label><br>
 <div class='form-group'>

<div class='col-sm-6 f_css'>
<input type='radio' id='medium_status' name='medium_status' value='draft' checked class='medium_status'/>
Publish as Draft(Default)<br>
</div>


<div class='col-sm-6 f_css'>
<input type='radio' id='medium_status' name='medium_status' value='public' class='medium_status'/>
Publish as Public<br>
</div>

</div>



<div id='loader_medium'></div>
<div  id='result_medium'></div>
<br><br><center><button class='btn btn-warning medium_btn' title='Post to Medium'>Post to Medium</button></center>

<br><br>
<div style='width:100%;'>.</div>
<br><br>
</div></div>";

echo "<script>alert('Data Successfully Generated.');
//$('.scroll_btn').click(function() {
    $('html,body').animate({
        scrollTop: $('.scroll_div_data').offset().top},
        'slow');
//});

</script>";


}







}


?>




